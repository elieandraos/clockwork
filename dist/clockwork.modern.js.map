{"version":3,"file":"clockwork.modern.js","sources":["../src/rules/index.js","../src/utils/index.js","../src/clockwork.js"],"sourcesContent":["const dayjs = require('dayjs');\n\nconst isSameOrAfter = require('dayjs/plugin/isSameOrAfter');\nconst isSameOrBefore = require('dayjs/plugin/isSameOrBefore');\nconst isLeapYear = require('dayjs/plugin/isLeapYear');\nconst isToday = require('dayjs/plugin/isToday');\nconst isTomorrow = require('dayjs/plugin/isTomorrow');\nconst isYesterday = require('dayjs/plugin/isYesterday');\n\ndayjs.extend(isSameOrAfter);\ndayjs.extend(isSameOrBefore);\ndayjs.extend(isLeapYear);\ndayjs.extend(isToday);\ndayjs.extend(isTomorrow);\ndayjs.extend(isYesterday);\n\nexport function required(value)  {\n    if( Array.isArray(value) && value.length === 0 )\n        return false;\n    else\n        return ![ null, undefined, '' ].includes(value);\n}\n\nexport function string(value) {\n    return typeof value === 'string';\n}\n\nexport function array(value) {\n    return Array.isArray(value);\n}\n\nexport function integer(value) {\n    return Number.isInteger(value);\n}\n\nexport function numeric(value) {\n    return !Number.isNaN(parseFloat(value)) && isFinite(value);\n}\n\nexport function alpha(value) {\n    return string(value) && new RegExp(\"^[A-Za-z]+$\").test(value.toLowerCase());\n}\n\nexport function alpha_numeric(value) {\n    return string(value) && new RegExp(\"^[a-zA-Z0-9\\\\s]+$\").test(value.toLowerCase());\n}\n\nexport function alpha_dash(value) {\n    return string(value) && new RegExp(\"^[a-zA-Z-_]+$\").test(value.toLowerCase());\n}\n\nexport function starts_with(value, arg = null) {\n    return string(value) && string(arg) && value.startsWith(arg);\n}\n\nexport function ends_with(value, arg = null) {\n    return string(value) && string(arg) && value.endsWith(arg);\n}\n\nexport function boolean(value) {\n    return [true, false].includes(value);\n}\n\nexport function is_in(value, arg = null) {\n    if(!string(arg) && !array(arg))\n        return false;\n\n    arg = string(arg) ? arg.split(',') : arg;\n    return arg.includes(value);\n}\n\nexport function not_in(value, arg = null) {\n    if(!string(arg) && !array(arg))\n        return false;\n\n    return !is_in(value, arg);\n}\n\nexport function size(value, arg = null) {\n    return (!string(value) && !array(value)) ? false : value.length === arg;\n}\n\nexport function min(value, arg = null) {\n    if(!value && !array(value)) {\n        return false;\n    }\n\n    value = ( string(value) || array(value) ) ? value.length : value;\n    return parseFloat(value) >= arg;\n}\n\nexport function max(value, arg = null) {\n    if(!value && !array(value)) {\n        return false;\n    }\n\n    value = ( string(value) || array(value) ) ? value.length : value;\n    return parseFloat(value) <= arg;\n}\n\nexport function same(value, arg = null) {\n    return (typeof value === 'object') ? JSON.stringify(value) === JSON.stringify(arg) : value === arg;\n}\nexport function different(value, arg = null) {\n    return !same(value, arg);\n}\n\nexport function url(value) {\n    return new RegExp(\n        \"^(http:\\\\/\\\\/www\\\\.|https:\\\\/\\\\/www\\\\.|http:\\\\/\\\\/|https:\\\\/\\\\/)?[a-z0-9]+([\\\\-.][a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\\/.*)?$\"\n    ).test(String(value).toLowerCase());\n}\n\nexport function email(value) {\n    return new RegExp(\"^\\\\S+@\\\\S+[.][0-9a-z]+$\").test(String(value).toLowerCase());\n}\n\nexport function uuid(value) {\n    if(!string(value))\n        return false;\n\n    return new RegExp(\"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\").test(String(value).toLowerCase());\n}\n\nexport function matches_regex(value, arg = null) {\n    if(!string(value))\n        return false;\n\n    return new RegExp(arg).test(String(value).toLowerCase());\n}\n\nexport function json(value) {\n    if(!string(value))\n        return false;\n\n    try {\n        return typeof JSON.parse(value) === \"object\";\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function date (value) {\n    return dayjs(value).isValid();\n}\n\nexport function after(value, arg = null) {\n    return dayjs(value).isAfter(arg);\n}\n\nexport function before(value, arg = null) {\n    return dayjs(value).isBefore(arg);\n}\n\nexport function after_or_equal(value, arg = null) {\n    return dayjs(value).isSameOrAfter(arg);\n}\n\nexport function before_or_equal(value, arg = null) {\n    return dayjs(value).isSameOrBefore(arg);\n}\n\nexport function leap_year(value) {\n    return dayjs(value).isLeapYear();\n}\n\nexport function today(value) {\n    return dayjs(value).isToday();\n}\n\nexport function tomorrow(value) {\n    return dayjs(value).isTomorrow();\n}\n\nexport function yesterday(value) {\n    return dayjs(value).isYesterday();\n}","export function is_object(value) {\n    return !(!value || Array.isArray(value) || typeof value !== 'object' || value.constructor !== Object);\n}\n\nexport function is_empty_object(value) {\n    return is_object(value) && Object.keys(value).length === 0;\n}\n\nexport const defaultErrorMessages = {\n    after: 'This field must be a date after \"{param}\"',\n    after_or_equal: 'This field must be a date after or equal to \"{param}\"',\n    alpha: 'This field must only contain letters',\n    alpha_dash: 'This field must only contain letters, dashes and underscores',\n    alpha_numeric: 'This field must only contain letters and numbers',\n    array: 'This field must be an array',\n    before: 'This field must be a date before \"{param}\"',\n    before_or_equal: 'This field must be a date before or equal to \"{param}\"',\n    boolean: 'This field must be boolean',\n    date: 'This field must be a valid date',\n    different: 'This field must be different than \"{param}\"',\n    email: 'This field must be a valid email.',\n    ens_with: 'This field must end with \"{param}\"',\n    integer: 'This field must be a number.',\n    is_in: 'This field must be one of \"{param}\"',\n    json: 'This field must be a json object',\n    leap_year: 'This date must be a leap year',\n    matches_regex: 'This field must match the regex \"{param}\"',\n    max: 'This field must not be greater than \"{param}\"',\n    min: 'This field must not be less than \"{param}\"',\n    not_in: 'This field must not be one of \"{param}\"',\n    numeric: 'This field must be numeric',\n    required: 'This field is required',\n    same: 'This field must be the same as \"{param}\"',\n    size: 'The field length must be \"{param}\"',\n    starts_with: 'This field must start with \"{param}\"',\n    string: 'This field must be a string',\n    today: 'This date must be today',\n    tomorrow: 'This date must be tomorrow',\n    url: 'This field must be a valid url',\n    uuid: 'This field must be a valid uuid',\n}","const Model = require('dot-prop');\nimport * as availableRules from \"./rules\";\nimport { is_object, is_empty_object, defaultErrorMessages } from \"./utils\";\n\nclass Clockwork {\n    /** public class properties **/\n    availableRules;\n    defaultErrorMessages;\n    customErrorMessages;\n\n    /** private class properties **/\n    #data;\n    #rules;\n    #errorsBag;\n\n    constructor() {\n        this.#data = {};\n        this.#rules = {};\n        this.#errorsBag = [];\n\n        this.availableRules = availableRules;\n        this.defaultErrorMessages = defaultErrorMessages;\n        this.customErrorMessages = {};\n    }\n\n    setData(data) {\n        if( !is_object(data) ) {\n            throw new Error('setData() argument must be an object.');\n        }\n\n        this.#data = data;\n        return this;\n    }\n\n    setRules(rules) {\n        if( !is_object(rules) ) {\n            throw new Error('setRules() argument must be an object.');\n        }\n\n        this.#rules = rules;\n        return this;\n    }\n\n    setCustomErrorMessages(errorMessages) {\n        if( !is_object(errorMessages) ) {\n            throw new Error('setCustomErrorMessages() argument must be an object.');\n        }\n\n        this.customErrorMessages = errorMessages;\n        return this;\n    }\n\n    getData() {\n        return this.#data;\n    }\n\n    getRules() {\n        return this.#rules;\n    }\n\n    getCustomErrorMessages() {\n        return this.customErrorMessages;\n    }\n\n    passes() {\n        return this.#validate();\n    }\n\n    fails() {\n        return !this.passes();\n    }\n\n    hasErrors(dataKey) {\n        return !!this.getErrors(dataKey).length;\n    }\n\n    getErrors(dataKey) {\n        return this.#errorsBag.filter(error => error.dataKey === dataKey).map(item => item.message);\n    }\n\n    getFirstError(dataKey) {\n        return this.hasErrors(dataKey) ? this.getErrors(dataKey)[0] : null;\n    }\n\n    extend(name, closure) {\n        if(!name || !closure) {\n            throw new Error('extend() requires two arguments: name string and callback function');\n        }\n\n        if(this.availableRules.hasOwnProperty(name)) {\n            throw new Error('The rule \"' + name + '\" exists.');\n        }\n\n        if(typeof closure !== 'function' || {}.toString.call(closure) !== '[object Function]') {\n            throw new Error('The closure of the rule \"' + name + '\" should be a function.');\n        }\n\n        if(typeof closure() !== 'boolean')\n            throw new Error(`The closure of the custom rule ${name} should return a boolean`);\n\n        this.availableRules[name] = closure;\n\n        return this;\n    }\n\n    #validate() {\n        if( is_empty_object(this.#rules))\n            throw new Error('the rules object is missing. Use setRules() to set it');\n\n        if( is_empty_object(this.#data))\n            throw new Error('the data object is missing. Use setData() to set it');\n\n        this.#errorsBag = [];\n\n        for (let [dataKey, rulesString] of Object.entries(this.#rules)) {\n            let value = Model.has(this.#data, dataKey) ? Model.get(this.#data, dataKey) : dataKey;\n            let rules = this.#toArray(rulesString);\n\n            // do not validate any other rule if value is null and 'sometimes' rule exists.\n            if(rules.includes('sometimes') && !value) {\n                continue;\n            }\n\n            rules.forEach( (rule) => {\n                // do not execute the 'sometimes' rule, skip it & continue the loop\n                if (rule === 'sometimes')\n                    return;\n\n                this.#executeRule(value, rule, dataKey);\n            })\n        }\n\n        return !this.#errorsBag.length;\n    }\n\n    #toArray(rulesString) {\n        let rules = rulesString.split('|');\n\n        rules.forEach( (rule, k) => {\n            rules[k] = rule.trim();\n        });\n\n        return rules;\n    }\n\n    #parse(ruleString) {\n        let rule = ruleString;\n        let arg = null;\n\n        if( typeof ruleString === 'string' && ruleString.split(':').length > 1 ) {\n            rule = ruleString.split(':')[0].trim();\n            arg = ruleString.split(':')[1].trim();\n\n            if(Model.has(this.#data, arg))\n                arg = Model.get(this.#data, arg);\n        }\n\n        return { rule: rule, arg: arg };\n    }\n\n    #executeRule(value, ruleString, dataKey) {\n        // check if the rule string contains any given argument\n        let { rule, arg } = this.#parse(ruleString);\n\n        // check if the rule exists in the available rules\n        if(!this.availableRules.hasOwnProperty(rule)) {\n            throw new Error('the rule \"' + rule + '\" does not exist.');\n        }\n\n        // run the rule\n        if(this.availableRules[rule](value, arg))\n            return;\n\n        // add error to #errorsBag in case of failure\n        let errorMessage = this.#getErrorMessage(dataKey, rule, arg);\n        this.#addError(dataKey, rule, errorMessage);\n    }\n\n    #getErrorMessage(dataKey, rule, arg = null) {\n        let message;\n        let key = dataKey + '.' + rule;\n\n        if( this.customErrorMessages.hasOwnProperty(key) )\n            message = this.customErrorMessages[key];\n        else {\n            if( this.defaultErrorMessages.hasOwnProperty(rule) )\n                message = this.defaultErrorMessages[rule];\n            else\n                throw new Error(`Set a customer error message for the rule ${rule}`);\n        }\n        return message.replace('{param}', arg);\n    }\n\n    #addError(dataKey, rule, errorMessage) {\n        let key = dataKey + '.' + rule;\n\n        this.#errorsBag.push({\n            key: key,\n            dataKey: dataKey,\n            message: errorMessage\n        });\n    }\n}\n\nexport default Clockwork;\n"],"names":["dayjs","require","isSameOrAfter","isSameOrBefore","isLeapYear","isToday","isTomorrow","isYesterday","string","value","array","Array","isArray","is_in","arg","split","includes","same","JSON","stringify","extend","length","undefined","Number","isInteger","isNaN","parseFloat","isFinite","RegExp","test","toLowerCase","startsWith","endsWith","String","parse","e","isValid","isAfter","isBefore","is_object","constructor","Object","is_empty_object","keys","defaultErrorMessages","after","after_or_equal","alpha","alpha_dash","alpha_numeric","before","before_or_equal","boolean","date","different","email","ens_with","integer","json","leap_year","matches_regex","max","min","not_in","numeric","required","size","starts_with","today","tomorrow","url","uuid","Model","Clockwork","_classPrivateFieldLooseBase","this","availableRules","customErrorMessages","setData","data","Error","setRules","rules","setCustomErrorMessages","errorMessages","getData","getRules","getCustomErrorMessages","passes","fails","hasErrors","dataKey","getErrors","filter","error","map","item","message","getFirstError","name","closure","hasOwnProperty","toString","call","rulesString","entries","has","get","forEach","rule","k","trim","ruleString","errorMessage","key","replace","push"],"mappings":"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"}